@page "/supermarket/{Id:int}"
@inject Services.ApiService apiService

@if (supermarket == null || products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h1>Products List At @supermarket.Name</h1>

    <TelerikGrid Data=supermarket.Products Pageable=true PageSize=5 Height="60%">
        <GridColumns>
            <GridColumn Field="Product.Name" />
            <GridColumn Field="Product.Brand" />
            <GridColumn Field="Price" />
            <GridColumn Field="Date" />
        </GridColumns>
    </TelerikGrid>
    <div class="dropdown-divider"></div>

    <h2>Registry a product at @supermarket.Name</h2>

    <TelerikNotification @ref="@Notification"
                         Class="demo-notification"
                         AnimationType="AnimationType.Fade"
                         AnimationDuration="600">
    </TelerikNotification>

    <div class="p-4 p-md-5 mb-4 text-white rounded bg-light">
        <div class="col-md-6 px-0">
            <EditForm Model="@supermarketProduct" OnValidSubmit="InsertSupermarketProduct">
                <FormFieldSet Width="100">
                    <label for="product" class="font-weight-bold text-secondary">Product</label>
                    <br />
                    <TelerikComboBox Data="@products"
                                     @bind-Value="@supermarketProduct.ProductId"
                                     Placeholder="Choose a product" Id="product" Width="100"
                                     AllowCustom="false" Filterable="true"
                                     ValueField="@nameof(ProductViewModel.Id)" TextField="@nameof(ProductViewModel.Name)">
                    </TelerikComboBox>
                </FormFieldSet>
                <FormFieldSet Width="100">
                    <label for="supermarketName" class="font-weight-bold text-secondary">Price</label>
                    <InputNumber @bind-Value="supermarketProduct.Price" class="form-control" id="supermarketPrice" />
                    <ValidationMessage For="@(() => supermarketProduct.Price)" />
                </FormFieldSet>

                <div class="form-group">
                    <input type="submit" class="btn btn-success" value="Registry Product" />
                </div>
            </EditForm>
        </div>
    </div>

}

@code {

    [Parameter]
    public int Id { get; set; }

    private SupermarketViewModel supermarket { get; set; }
    private List<ProductViewModel> products { get; set; }
    private SupermarketProductViewModel supermarketProduct { get; set; }
    public TelerikNotification Notification { get; set; }


    protected override async Task OnInitializedAsync()
    {
        supermarket = await apiService.GetSupermarketsAsync(Id);
        products = await apiService.GetProductsAsync();
        supermarketProduct = new SupermarketProductViewModel();
    }


    private async Task InsertSupermarketProduct()
    {
        if (supermarket.Products.Where(x => x.ProductId.Equals(supermarketProduct.ProductId)).Any())
        {
            Notification.Show(new NotificationModel()
            {
                Text = "Warning! Product already registred.",
                ThemeColor = ThemeColors.Warning,
                CloseAfter = 3000
            });

        }
        else
        {
            supermarketProduct.SupermarketId = Id;
            supermarketProduct.Date = DateTime.Now;
            var retorno = await apiService.RegistrySupermarketProduct(supermarketProduct);
            supermarket = await apiService.GetSupermarketsAsync(Id);
            Notification.Show(new NotificationModel()
            {
                Text = "Product registered with success.",
                ThemeColor = ThemeColors.Success,
                CloseAfter = 3000
            });
        }

    }

}
